/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

import objects.Customer;
import objects.Item;
import objects.Route;
import objects.VehicleType;

/**
 *
 * @author Huang
 */
public class ResultJFrame extends javax.swing.JDialog
{

	/**
	 * Creates new form ResultJFrame
	 */
	public ResultJFrame()
	{
//		super(frame);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{
		setTitle("Result Frame");
		setPreferredSize(new java.awt.Dimension(1500, 830));
//		setAlwaysOnTop(false);

		jLabel1 = new javax.swing.JLabel();
		loadingPanel = new javax.swing.JPanel();
		innerloadingPanel= new JPanel();
		xaxisLabel = new javax.swing.JLabel();
		widthLabel = new javax.swing.JLabel();
		yaxisLabel = new javax.swing.JLabel();
		lengthLabel = new javax.swing.JLabel();
		nextButton1 = new javax.swing.JButton();
		saveButton = new javax.swing.JButton();
		mapPanel = new myMapPanel();
		summaryLabel = new javax.swing.JLabel();
		routeLabel = new javax.swing.JLabel();

		yaxisLabel.setText(transformStringToHtml("|||||V Y"));

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
		jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/GUI/bg-header-logo-ds.png"))); // NOI18N

		innerloadingPanel.setBackground(new java.awt.Color(255, 255, 255));
		innerloadingPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3,
				new java.awt.Color(255, 0, 255)));

		// javax.swing.GroupLayout loadingPanelLayout = new
		// javax.swing.GroupLayout(loadingPanel);
		// loadingPanel.setLayout(loadingPanelLayout);
		// loadingPanelLayout.setHorizontalGroup(
		// loadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGap(0, 672, Short.MAX_VALUE)
		// );
		// loadingPanelLayout.setVerticalGroup(
		// loadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGap(0, 720, Short.MAX_VALUE)
		// );

		xaxisLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		xaxisLabel.setText("---------------------------->  X");

		widthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

		yaxisLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		yaxisLabel.setToolTipText("");

		lengthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		lengthLabel.setToolTipText("");

		nextButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		nextButton1.setForeground(new java.awt.Color(0, 0, 204));
		nextButton1.setText("Next");
		nextButton1.setToolTipText("See next route");
		nextButton1.addMouseListener(new java.awt.event.MouseAdapter()
		{
			public void mouseClicked(java.awt.event.MouseEvent evt)
			{
				nextButton1MouseClicked(evt);
			}
		});
		nextButton1.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				nextButton1ActionPerformed(evt);
			}
		});

		saveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		saveButton.setForeground(new java.awt.Color(0, 0, 255));
		saveButton.setText("Save Result");
		saveButton.setToolTipText("Save result as txt file");
		saveButton.addMouseListener(new java.awt.event.MouseAdapter()
		{
			public void mouseClicked(java.awt.event.MouseEvent evt)
			{
				saveButtonMouseClicked(evt);
			}
		});

		mapPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3,
				new java.awt.Color(255, 0, 255)));
		mapPanel.setBackground(new java.awt.Color(255, 255, 255));
		mapPanel.setLayout(null);
		mapPanel.setPreferredSize(new Dimension(716, 405));
		loadingPanel.setLayout(null);
		loadingPanel.setPreferredSize(new Dimension(678, 726));
		innerloadingPanel.setLayout(null);
		innerloadingPanel.setPreferredSize(new Dimension(678, 726));
		innerloadingPanel.setLocation(0, 0);
		loadingPanel.add(innerloadingPanel);

		// javax.swing.GroupLayout mapPanelLayout = new
		// javax.swing.GroupLayout(mapPanel);
		// mapPanel.setLayout(mapPanelLayout);
		// mapPanelLayout.setHorizontalGroup(
		// mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGap(0, 710, Short.MAX_VALUE)
		// );
		// mapPanelLayout.setVerticalGroup(
		// mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGap(0, 399, Short.MAX_VALUE)
		// );

		summaryLabel.setBackground(new java.awt.Color(153, 255, 255));
		summaryLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		summaryLabel.setAutoscrolls(true);
		summaryLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1,
				new java.awt.Color(153,0,255)));

		routeLabel.setBackground(new java.awt.Color(153, 255, 255));
		routeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		routeLabel.setAutoscrolls(true);
		routeLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1,
				new java.awt.Color(153,0,255)));

		// javax.swing.GroupLayout layout = new
		// javax.swing.GroupLayout(getContentPane());
		// getContentPane().setLayout(layout);
		// layout.setHorizontalGroup(
		// layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
		// layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGroup(layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
		// .addGroup(layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addComponent(jLabel1)
		// .addGroup(layout.createSequentialGroup()
		// .addGap(279, 279, 279)
		// .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
		// javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		// .addComponent(nextButton1)
		// .addGap(165, 165, 165)
		// .addComponent(lengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 37, javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addGroup(layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addComponent(summaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 726, javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addComponent(routeLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 726, javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
		// 49, Short.MAX_VALUE)
		// .addComponent(yaxisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
		// javax.swing.GroupLayout.PREFERRED_SIZE)))
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
		// .addGroup(layout.createSequentialGroup()
		// .addContainerGap()
		// .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// javax.swing.GroupLayout.DEFAULT_SIZE,
		// javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
		// javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGroup(layout.createSequentialGroup()
		// .addComponent(xaxisLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 195, javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addGap(148, 148, 148)
		// .addComponent(widthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56,
		// javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addComponent(loadingPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// javax.swing.GroupLayout.DEFAULT_SIZE,
		// javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addContainerGap())
		// );
		// layout.setVerticalGroup(
		// layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGroup(layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,
		// false)
		// .addGroup(javax.swing.GroupLayout.Alignment.LEADING,
		// layout.createSequentialGroup()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83,
		// javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addGroup(layout.createSequentialGroup()
		// .addContainerGap()
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		// .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41,
		// javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addComponent(nextButton1, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		// .addComponent(summaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 97, javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		// .addComponent(routeLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
		// javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		// .addGap(18, 18, 18)
		// .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// javax.swing.GroupLayout.DEFAULT_SIZE,
		// javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addGroup(layout.createSequentialGroup()
		// .addGap(8, 8, 8)
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
		// .addComponent(xaxisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
		// javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addComponent(widthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
		// javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addGap(8, 8, 8)
		// .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		// .addGroup(layout.createSequentialGroup()
		// .addComponent(yaxisLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 175, javax.swing.GroupLayout.PREFERRED_SIZE)
		// .addGap(163, 163, 163)
		// .addComponent(lengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// 49, javax.swing.GroupLayout.PREFERRED_SIZE))
		// .addComponent(loadingPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
		// javax.swing.GroupLayout.DEFAULT_SIZE,
		// javax.swing.GroupLayout.PREFERRED_SIZE))))
		// .addContainerGap(47, Short.MAX_VALUE))
		// );
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel1)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(279,
																										279,
																										279)
																								.addComponent(
																										saveButton,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										156,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(nextButton1)
																.addGap(202, 202, 202))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING)
																												.addComponent(
																														summaryLabel,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														716,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addComponent(
																														routeLabel,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														716,
																														javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										53,
																										Short.MAX_VALUE)
																								.addComponent(
																										yaxisLabel,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										27,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										mapPanel,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										Short.MAX_VALUE)
																								.addComponent(
																										lengthLabel,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										37,
																										javax.swing.GroupLayout.PREFERRED_SIZE)))))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		xaxisLabel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		195,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(148, 148, 148)
																.addComponent(
																		widthLabel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		56,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addComponent(loadingPanel,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addGroup(
														javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						83,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addContainerGap()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.BASELINE)
																												.addComponent(
																														saveButton,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														41,
																														javax.swing.GroupLayout.PREFERRED_SIZE)
																												.addComponent(
																														nextButton1,
																														javax.swing.GroupLayout.PREFERRED_SIZE,
																														41,
																														javax.swing.GroupLayout.PREFERRED_SIZE))))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		summaryLabel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		97,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		routeLabel,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addGap(18, 18, 18)
																.addComponent(
																		mapPanel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(8, 8, 8)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						xaxisLabel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						25,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						widthLabel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						31,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(8, 8, 8)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										yaxisLabel,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										175,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(53,53,53)
																								.addComponent(
																										lengthLabel,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										49,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addComponent(
																						loadingPanel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))))
								.addContainerGap(47, Short.MAX_VALUE)));
		pack();
		revalidate();
		repaint();
		// setModal(true);
	}// </editor-fold>//GEN-END:initComponents

	private void nextButton1ActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_nextButton1ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_nextButton1ActionPerformed

	private void nextButton1MouseClicked(java.awt.event.MouseEvent evt)
	{// GEN-FIRST:event_nextButton1MouseClicked
		route_index++;
		route_index = route_index % routes.size();
		for (Iterator iterator = customerLabels.iterator(); iterator.hasNext();)
		{
			CustomerLabel customerLabel = (CustomerLabel) iterator.next();
			JLabel label = customerLabel.getLabel();
			mapPanel.remove(label);
			iterator.remove();
		}

		for (Iterator iterator = itemLabels.iterator(); iterator.hasNext();)
		{
			JLabel label = (JLabel) iterator.next();
			innerloadingPanel.remove(label);
			iterator.remove();
		}

		Route route = routes.get(route_index);

		setRouteLabel(route, route_index);

		drawRoute(route);
		drawLS(route);
		//MainFrame owner = (MainFrame) getParent();
		owner.recoverColor(previousRouteSequence);
		owner.changeColor(route.get_customerSequence());
		// owner.revalidate();
		// owner.repaint();
		previousRouteSequence = route.get_customerSequence();
	}// GEN-LAST:event_nextButton1MouseClicked

	private void saveButtonMouseClicked(java.awt.event.MouseEvent evt)
	{

		JFileChooser chooser = new JFileChooser();

		int returnVal = chooser.showSaveDialog(this);
		File file = chooser.getSelectedFile();
		if (returnVal == JFileChooser.APPROVE_OPTION)
		{
			PrintWriter out = null;
			try
			{

				out = new PrintWriter(new BufferedWriter(new FileWriter(file)));
				out.println("There are " + routes.size()
						+ " routes. Total distance of all routes is " + totalDistance
						+ ". Total cost is " + totalCost + ".");
				out.println();

				for (Route route : routes)
				{
					// String routeStr = "<html>";
					out.println("Route " + routes.indexOf(route) + ":");
					out.println("Use  " + "VehicleType"
							+ vehicleTypes.indexOf(route.get_VehicleType()));
					out.println("This route has total weight: " + route.get_totalWeight()
							+ " total distance: " + route.get_totalDistance() + " total cost: "
							+ route.get_totalCost());
					out.println();
					out.println("Depot ");
					for (Customer cus : route.get_customerSequence())
					{
						out.println("------->Customer" + cus.get_index());
					}
					out.println();
					out.println("------->Depot");
					out.println();
				}

			}
			catch (Exception e)
			{
				e.printStackTrace();
			}
			finally
			{
				out.close();
			}
		}

	}// GEN-LAST:event_saveButtonMouseClicked

	/**
	 * @param args
	 *            the command line arguments
	 */
	/*
	 * public static void main(String args[]) { /* Set the Nimbus look and feel
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Look and feel setting code (optional) ">
	/*
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the
	 * default look and feel. For details see
	 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
	 */
	/*
	 * try { for (javax.swing.UIManager.LookAndFeelInfo info :
	 * javax.swing.UIManager.getInstalledLookAndFeels()) { if
	 * ("Nimbus".equals(info.getName())) {
	 * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } } }
	 * catch (ClassNotFoundException ex) {
	 * java.util.logging.Logger.getLogger(ResultJFrame
	 * .class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch
	 * (InstantiationException ex) {
	 * java.util.logging.Logger.getLogger(ResultJFrame
	 * .class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch
	 * (IllegalAccessException ex) {
	 * java.util.logging.Logger.getLogger(ResultJFrame
	 * .class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch
	 * (javax.swing.UnsupportedLookAndFeelException ex) {
	 * java.util.logging.Logger
	 * .getLogger(ResultJFrame.class.getName()).log(java.
	 * util.logging.Level.SEVERE, null, ex); } //</editor-fold>
	 * 
	 * /* Create and display the form
	 */
	/*
	 * java.awt.EventQueue.invokeLater(new Runnable() { public void run() { new
	 * ResultJFrame().setVisible(true); } }); }
	 */
	public static String transformStringToHtml(String strToTransform)
	{
		String ans = "<html>";
		String br = "<br>";
		String[] lettersArr = strToTransform.split("");
		for (String letter : lettersArr)
		{
			ans += letter + br;
		}
		ans += "</html>";
		return ans;
	}

	public void initRoutesAndVehicles(ArrayList<Route> routes, ArrayList<VehicleType> vehicleTypes,
			Customer depot)
	{
		this.routes = routes;
		this.vehicleTypes = vehicleTypes;
		this.depot = depot;
	}

	public void setInitShow()
	{
		route_index = 0;

		for (Route temp : routes)
		{
			totalCost += temp.get_totalCost();
			totalDistance += temp.get_totalDistance();
		}
		Route route = routes.get(0);

		String summary = "<html>";
		summary += "There are " + routes.size() + " routes. Total distance of all routes is "
				+ totalDistance + ". Total cost is " + totalCost + ".";
		summary += "<br>";
		summary += "The panel below shows the diagram of a route, <br>and the  panel  on the right shows the loading surface of the vehicle for this route.";
		summary += "</html>";
		summaryLabel.setText(summary);
		setRouteLabel(route, 0);

		drawRoute(route);
		drawLS(route);
		//MainFrame owner = (MainFrame) getParent();
		owner.changeColor(route.get_customerSequence());
		// owner.revalidate();
		// owner.repaint();
		previousRouteSequence = route.get_customerSequence();

	}

	public void drawLS(Route route)
	{
		ArrayList<Item> allItems = new ArrayList<Item>();
		for (Customer customer : route.get_customerSequence())
		{
			allItems.addAll(customer.get_items());
		}
		VehicleType vehicleType = route.get_VehicleType();
		int length = vehicleType.get_length();
		int width = vehicleType.get_width();
		double a = 726.0 / 480.0;
		double rate = (double) length / width;
		if (rate == a)
		{
			innerloadingPanel.setSize(new Dimension(480, 726));
		}
		else if (rate > a)
		{
			innerloadingPanel.setSize(new Dimension((int) (726 / rate), 726));
		}
		else
			innerloadingPanel.setSize(new Dimension(480,  (int)(480 * rate)));

		double panelLength = innerloadingPanel.getSize().getHeight();
		double panelWidth = innerloadingPanel.getSize().getWidth();
		double yunit = panelLength / (double) length;
		double xunit = panelWidth / (double) width;
		for (Item item : allItems)
		{
			int x = (int) (item.get_item_x() * xunit);
			int y = (int) (item.get_item_y() * yunit);
			JLabel label = new JLabel();
			label.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK));
			label.setLocation(x, y);
			label.setOpaque(true);
			label.setBackground(new Color(153,153,255));
			label.setSize((int) (item.get_width() * xunit), (int) (item.get_length() * yunit));
			label.setToolTipText("item" + item.get_index_c() + "_" + item.get_index() + ", "
					+ item.get_width() + "X" + item.get_length() + ", (" + item.get_item_x() + ","
					+ item.get_item_y() + ")");
			itemLabels.add(label);
			innerloadingPanel.add(label);

		}
		innerloadingPanel.revalidate();
		innerloadingPanel.repaint();
		loadingPanel.revalidate();
		loadingPanel.repaint();

	}

	public void drawRoute(Route route)
	{
		int[] coorLimt = SupportMainFrame
				.findCoordinatesLimits(depot, route.get_customerSequence());
		int n = 1 + route.get_customerSequence().size();

		int[][] coor = new int[n][];
		coor[0] = SupportMainFrame.addPointforDepot(depot, mapPanel, customerLabels, coorLimt);
		for (int i = 0; i < route.get_customerSequence().size(); i++)
		{
			coor[1 + i] = SupportMainFrame.addPointforCus(route.get_customerSequence().get(i),
					mapPanel, customerLabels, coorLimt);
		}
		for (int i = 1; i < customerLabels.size(); i++)
		{
			customerLabels.get(i).getLabel().setBackground(new Color(255, 0, 51));
			customerLabels.get(i).getLabel().setSize(12, 12);
		}
		mapPanel.setCoordinates(coor);
		mapPanel.revalidate();
		mapPanel.repaint();
	}

	public void setRouteLabel(Route route, int index)
	{
		VehicleType vehicleType = route.get_VehicleType();
		lengthLabel.setText(vehicleType.get_length() + "");
		widthLabel.setText(vehicleType.get_width() + "");
		String routeStr = "<html>";
		routeStr += "Route " + index + ":" + "<br>";
		routeStr += "Use  " + "VehicleType" + vehicleTypes.indexOf(vehicleType) + "<br>";
		routeStr += "This route has total weight: " + route.get_totalWeight() + " total distance: "
				+ route.get_totalDistance() + " total cost: " + route.get_totalCost() + "<br>";
		routeStr += "<br>";
		routeStr += "Depot " + "<br>";
		for (Customer cus : route.get_customerSequence())
		{
			routeStr += "------->Customer" + cus.get_index();
		}
		routeStr += "<br>";
		routeStr += "------->Depot" + "</html>";
		routeLabel.setText(routeStr);
	}
	
	public void setOwner(MainFrame owner)
	{
		this.owner=owner;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private MainFrame owner;
	private javax.swing.JLabel jLabel1;
	private JPanel innerloadingPanel;
	private javax.swing.JLabel lengthLabel;
	private javax.swing.JPanel loadingPanel;
	private javax.swing.JButton nextButton1;
	private javax.swing.JLabel routeLabel;
	private javax.swing.JButton saveButton;
	private javax.swing.JLabel summaryLabel;
	private javax.swing.JLabel widthLabel;
	private javax.swing.JLabel xaxisLabel;
	private javax.swing.JLabel yaxisLabel;
	private myMapPanel mapPanel;
	private ArrayList<Route> routes;
	private ArrayList<VehicleType> vehicleTypes;
	private Customer depot;
	private ArrayList<CustomerLabel> customerLabels = new ArrayList<CustomerLabel>();
	private ArrayList<JLabel> itemLabels = new ArrayList<JLabel>();
	private ArrayList<Customer> previousRouteSequence;
	private int route_index;
	private double totalCost = 0, totalDistance = 0;
	// End of variables declaration//GEN-END:variables
}
